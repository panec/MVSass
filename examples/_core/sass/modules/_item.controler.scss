@mixin module-item( $model, $isInitial: false, $is-standalone: false,$mod: (), $modType: "class", $modDivider: "-" ) {

	@debug "MODULE ITEM" $model;

	$prefix: ".m-item";

	@if ( $mod == "" or length( $mod ) == 0  ) {
		#{ $prefix } {
			@include _module-item( $model, "&", $isInitial ) { @content; };
		}
	}
	@else {
		#{ mvs-mod-to-string( $mod, $prefix, $modType, $modDivider ) } {
			@include _module-item( $model, $prefix, $isInitial ) { @content; };
		}
	}
}

@mixin _module-item( $model, $prefix: "", $isInitial: false, $is-standalone: false ) {
	$staticPrefix: $prefix;

	@if ( $prefix == "&" ) {
		$staticPrefix: nth( mvs-parent(), -1 );
	}

	@include mvs-respond-map( "_", $model, "", 1, "", 0 );

	#{ $prefix }__#{ "item" } {
		// @include mvs-respond-map( "_item", $model, if( $is-standalone, "", $staticPrefix ), 1, "", 0 );
		@include mvs-respond-map( "_item", $model, $staticPrefix, 1, "", 0 );

	}

	@content;
}
